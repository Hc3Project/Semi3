# 회원 정보 서비스 수행용 SQL 설정파일

# 회원 가입
insertMember=INSERT INTO MEMBER VALUES(?, ?, ?)
# 로그인
selectMember=SELECT * FROM MEMBER WHERE USERID = ? AND USERPWD = ?
# 회원 정보 수정
updateMember=UPDATE MEMBER SET EMAIL = ?, USERPWD = ? WHERE USERID = ?
# 회원 탈퇴
deleteMember=DELETE FROM MEMBER WHERE USERID = ?

# 아이디 중복 체크 쿼리
idDupCheck=SELECT COUNT(USERID) FROM MEMBER WHERE USERID=?


# for recommend query
# get user index
selectUserIdx = select idx from (select rownum-1 idx, userid from (select distinct(userid) from rating order by userid)) where userid = ?
# get list
selectIdxList = select * from (select rownum-1 idx, condition from (select distinct(condition) from rating order by condition))
# get item matrix
selectItemMatrix = select useridx, itemidx, score from rating ra \
		join (select rownum-1 useridx, userid from (select distinct(userid) from rating order by userid)) uidx on (ra.userid = uidx.userid) \
		join (select rownum-1 itemidx, mcode from (select distinct(mcode) from rating order by mcode)) iidx on (ra.mcode=iidx.mcode)
#get user likes reveiwer
selectLikesReviewer = select l.*, rvr.rname from likes l join reviewer rvr on (l.rvrcode=rvr.rvrcode) where userid like ? and status like 'Y'
#get movie title
selectMovieTitle = select mTitle from movie_info where mcode like ?
# get score count
selectScoreCnt = select sum(decode(score, 1, 1, 0)) s1, sum(decode(score, 2, 1, 0)) s2, sum(decode(score, 3, 1, 0)) s3, sum(decode(score, 4, 1, 0)) s4, sum(decode(score, 5, 1, 0)) s5 from rating where userid like ?